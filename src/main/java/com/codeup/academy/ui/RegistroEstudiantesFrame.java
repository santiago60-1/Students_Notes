/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.codeup.academy.ui;

import com.codeup.academy.domain.Estudiante;
import com.codeup.academy.domain.Notas;
import com.codeup.academy.services.RegistroEstudiantesService;
import com.codeup.academy.services.calculoEstudiantesService;
import java.io.BufferedReader;
import java.util.List;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import javax.swing.SwingUtilities;


/**
 *
 * @author Coder
 */
public class RegistroEstudiantesFrame extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(RegistroEstudiantesFrame.class.getName());
    private RegistroEstudiantesService registroEstudiantesService = new RegistroEstudiantesService();
    private calculoEstudiantesService calculoService = new calculoEstudiantesService();

    
    /**
     * Creates new form RegistroEstudiantesFrame
     */
    public RegistroEstudiantesFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblName = new javax.swing.JTextField();
        lblNote = new javax.swing.JTextField();
        lblNote2 = new javax.swing.JTextField();
        lblNote3 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        spinerAge = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaEstudiantes = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtPromedio = new javax.swing.JLabel();
        txtNota = new javax.swing.JLabel();
        txtResultado = new javax.swing.JLabel();
        txtPromedioGrupal = new javax.swing.JLabel();
        buttonClear = new javax.swing.JButton();
        buttonExit = new javax.swing.JButton();
        saveCsv = new javax.swing.JButton();
        btnCarry = new javax.swing.JButton();
        closeSesion = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("nombre");

        jLabel2.setText("nota 1");

        jLabel3.setText("nota 2");

        jLabel4.setText("Edad");

        jLabel5.setText("Nota 3");

        lblName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lblNameActionPerformed(evt);
            }
        });

        jButton1.setText("Guardar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Estadistica");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Calcular");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        tablaEstudiantes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nombre", "Edad", "Nota 1", "Nota 2", "Nota 3"
            }
        ));
        jScrollPane1.setViewportView(tablaEstudiantes);

        txtPromedio.setText("Promedio individual");

        txtNota.setText("Nota maxima");

        txtResultado.setText("Resultado");

        txtPromedioGrupal.setText("Promedio grupal");

        buttonClear.setText("Limpiar");
        buttonClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonClearActionPerformed(evt);
            }
        });

        buttonExit.setText("Salir");
        buttonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExitActionPerformed(evt);
            }
        });

        saveCsv.setText("Guardar csv");
        saveCsv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveCsvActionPerformed(evt);
            }
        });

        btnCarry.setText("Cargar csv");
        btnCarry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCarryActionPerformed(evt);
            }
        });

        closeSesion.setText("Cerrar sesion");
        closeSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeSesionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4)
                            .addComponent(jButton1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(spinerAge, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                                .addComponent(lblName, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(buttonClear))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel5)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2)
                                .addComponent(lblNote, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                                .addComponent(lblNote2)
                                .addComponent(lblNote3))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton2)
                                    .addComponent(buttonExit))
                                .addGap(45, 45, 45)
                                .addComponent(jButton3))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(saveCsv)
                        .addGap(56, 56, 56)
                        .addComponent(btnCarry)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPromedio)
                            .addComponent(txtPromedioGrupal))
                        .addGap(59, 59, 59)
                        .addComponent(txtNota)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtResultado)
                        .addGap(122, 122, 122))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(closeSesion)
                .addGap(83, 83, 83))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNote2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spinerAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblNote3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2)
                            .addComponent(jButton3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonClear)
                            .addComponent(buttonExit))
                        .addGap(239, 239, 239))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPromedio)
                            .addComponent(txtNota)
                            .addComponent(txtResultado))
                        .addGap(39, 39, 39)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPromedioGrupal)
                            .addComponent(saveCsv)
                            .addComponent(btnCarry))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(closeSesion)
                        .addGap(40, 40, 40))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void inicializarTabla(){
        
        tablaEstudiantes.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {},
        new String [] { "Nombre", "Edad", "Nota 1", "Nota 2", "Nota 3"
        }
     ));
}
    
private void actualizarListaEstudiantes() {
    inicializarTabla();
    var modelo = (javax.swing.table.DefaultTableModel) tablaEstudiantes.getModel();
    modelo.setRowCount(0);
    for (var est : registroEstudiantesService.listarEstudiantes()) {
        modelo.addRow(new Object[]{
            est.getNombre(),
            est.getEdad(),
            est.getNote(),
            est.getNote2(),
            est.getNote3(),
        });
    }
}

    
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
     try {
        String id = String.valueOf(System.currentTimeMillis());
        String nombre = lblName.getText(); // JTextField para entrada
        if (nombre == null || nombre.isBlank()) {
            javax.swing.JOptionPane.showMessageDialog(this, "El nombre no puede estar vacío");
            return;
        }

        int edad = (Integer) spinerAge.getValue();

        String nota1Text = lblNote.getText();
        String nota2Text = lblNote2.getText();
        String nota3Text = lblNote3.getText();

        if (nota1Text.isBlank() || nota2Text.isBlank() || nota3Text.isBlank()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Por favor, ingresa todas las notas");
            return;
        }

        double note = Double.parseDouble(nota1Text);
        double note2 = Double.parseDouble(nota2Text);
        double note3 = Double.parseDouble(nota3Text);

        if (note < 0 || note > 5) {
            javax.swing.JOptionPane.showMessageDialog(this, "La nota 1 debe estar entre 0 y 5");
            return;
        }

        if (note2 < 0 || note2 > 5) {
            javax.swing.JOptionPane.showMessageDialog(this, "La nota 2 debe estar entre 0 y 5");
            return;
        }

        if (note3 < 0 || note3 > 5) {
            javax.swing.JOptionPane.showMessageDialog(this, "La nota 3 debe estar entre 0 y 5");
            return;
        }

        List<String> lista = new ArrayList<>();
        Estudiante estudiante = new Estudiante(id, nombre, edad, note, note2, note3, lista);

        registroEstudiantesService.agregarEstudiante(estudiante);
        actualizarListaEstudiantes();

    } catch (NumberFormatException e) {
        javax.swing.JOptionPane.showMessageDialog(this, "Por favor, ingresa valores numéricos válidos para las notas");
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void lblNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lblNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lblNameActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

try {
    String id = "1";
    String nombre = lblName.getText();
    int edad = (Integer) spinerAge.getValue();
    double note = Double.parseDouble(lblNote.getText());
    double note2 = Double.parseDouble(lblNote2.getText());
    double note3 = Double.parseDouble(lblNote3.getText());

    // Validar antes de crear el objeto
    if (note < 0 || note > 5) {
        javax.swing.JOptionPane.showMessageDialog(this, "La nota 1 debe estar entre 0 y 5");
        return;
    }

    if (note2 < 0 || note2 > 5) {
        javax.swing.JOptionPane.showMessageDialog(this, "La nota 2 debe estar entre 0 y 5");
        return;
    }

    if (note3 < 0 || note3 > 5) {
        javax.swing.JOptionPane.showMessageDialog(this, "La nota 3 debe estar entre 0 y 5");
        return;
    }

    List<String> lista = new ArrayList<>();
    Estudiante estudiante = new Estudiante(id, nombre, edad, note, note2, note3, lista);

    // Ahora sí actualiza los campos solo si las notas son válidas
    txtPromedio.setText("El promedio es: " + estudiante.calcularPromedio());
    txtNota.setText("La nota máxima del estudiante es: " + estudiante.notaMaxima());
    txtResultado.setText(estudiante.estaAprobado() ? "Aprobado" : "Reprobado");

} catch (NumberFormatException e) {
    javax.swing.JOptionPane.showMessageDialog(this, "Por favor ingrese las notas para hacer el promedio");
}


    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

    try{
        


    List<Estudiante> listaEstudiantes = registroEstudiantesService.listarEstudiantes();
    List<Notas> listaNotas = new ArrayList<>();

    int aprobados = 0;
    int reprobados = 0;

    for (Estudiante est : listaEstudiantes) {
        Notas n1 = new Notas(est.getNote());
        Notas n2 = new Notas(est.getNote2());
        Notas n3 = new Notas(est.getNote3());

        listaNotas.add(n1);
        listaNotas.add(n2);
        listaNotas.add(n3);

        List<Notas> notasEstudiante = List.of(n1, n2, n3);
        double promedioEstudiante = calculoService.promedio(notasEstudiante);

        if (calculoService.aprobado(promedioEstudiante, notasEstudiante)) {
            aprobados++;
        } else {
            reprobados++;
        }
    }

    double promedioGrupal = calculoService.promedio(listaNotas);
    Notas mejorNota = calculoService.notaMaxima(listaNotas);
    boolean grupoAprobado = calculoService.aprobado(promedioGrupal, listaNotas);

    txtPromedioGrupal.setText("Promedio grupal: " + promedioGrupal);
    txtNota.setText("Mejor nota del grupo: " + mejorNota.getValor());
    txtResultado.setText("Aprobados: " + aprobados + " | Reprobados: " + reprobados +
            " | Estado grupal: " + (grupoAprobado ? "Aprobado" : "No aprobado"));

    } catch(Exception e) {
        javax.swing.JOptionPane.showMessageDialog(this, "Por favor rellene los campos");
}

    }//GEN-LAST:event_jButton2ActionPerformed

    private void buttonClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonClearActionPerformed
        
        txtPromedio.setText("El promedio es: ");
        lblNote.setText("");
        lblName.setText("");
        lblNote2.setText("");
        lblNote3.setText("");
        spinerAge.setValue(0);
        
        
    }//GEN-LAST:event_buttonClearActionPerformed

    private void buttonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExitActionPerformed

        dispose();

    }//GEN-LAST:event_buttonExitActionPerformed

    private void saveCsvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveCsvActionPerformed
    List<Estudiante> estudiantes = registroEstudiantesService.listarEstudiantes();

    if (estudiantes.isEmpty()) {
        javax.swing.JOptionPane.showMessageDialog(this, "No hay estudiantes para guardar.");
        return;
    }

    JFileChooser fileChooser = new JFileChooser();
    fileChooser.setDialogTitle("Guardar como archivo CSV");

    int seleccion = fileChooser.showSaveDialog(this);
    if (seleccion == JFileChooser.APPROVE_OPTION) {
        File archivo = fileChooser.getSelectedFile();

        // Asegurar que tenga la extensión .csv
        if (!archivo.getName().toLowerCase().endsWith(".csv")) {
            archivo = new File(archivo.getAbsolutePath() + ".csv");
        }

        try (PrintWriter writer = new PrintWriter(new FileWriter(archivo))) {
            // Escribir encabezado
            writer.println("ID,Nombre,Edad,Nota 1,Nota 2,Nota 3,Promedio,Nota Máxima,Aprobado");

            // Escribir datos
            for (Estudiante est : estudiantes) {
                double promedio = est.calcularPromedio();
                double notaMax = est.notaMaxima();
                String estado = est.estaAprobado() ? "Aprobado" : "Reprobado";

                writer.printf("%s,%s,%d,%.2f,%.2f,%.2f,%.2f,%.2f,%s%n",
                    est.getId(),
                    est.getNombre(),
                    est.getEdad(),
                    est.getNote(),
                    est.getNote2(),
                    est.getNote3(),
                    promedio,
                    notaMax,
                    estado
                );
            }

            javax.swing.JOptionPane.showMessageDialog(this, "Archivo CSV guardado exitosamente.");

        } catch (Exception e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Error al guardar el archivo: " + e.getMessage());
        }
    }
        
    }//GEN-LAST:event_saveCsvActionPerformed

    private void btnCarryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCarryActionPerformed
            JFileChooser fileChooser = new JFileChooser();
    fileChooser.setDialogTitle("Seleccionar archivo CSV");

    int seleccion = fileChooser.showOpenDialog(this);
    if (seleccion == JFileChooser.APPROVE_OPTION) {
        File archivo = fileChooser.getSelectedFile();

        try (BufferedReader reader = new BufferedReader(new FileReader(archivo))) {
            String linea;
            boolean primeraLinea = true;

            while ((linea = reader.readLine()) != null) {
                // Saltar encabezado
                if (primeraLinea) {
                    primeraLinea = false;
                    continue;
                }

                // Separar los datos
                String[] datos = linea.split(",");

                if (datos.length >= 9) { // Asegura que hay suficientes columnas
                    String id = datos[0];
                    String nombre = datos[1];
                    int edad = Integer.parseInt(datos[2]);
                    double nota1 = Double.parseDouble(datos[3]);
                    double nota2 = Double.parseDouble(datos[4]);
                    double nota3 = Double.parseDouble(datos[5]);

                    // Aquí puedes manejar los comentarios si los usas
                    List<String> comentarios = new ArrayList<>();

                    Estudiante est = new Estudiante(id, nombre, edad, nota1, nota2, nota3, comentarios);

                    // Agregarlo al servicio o a tu lista
                    registroEstudiantesService.agregarEstudiante(est);
                }
            }

            actualizarListaEstudiantes(); // refresca tu tabla o lista
            javax.swing.JOptionPane.showMessageDialog(this, "Archivo CSV cargado exitosamente.");

        } catch (Exception  e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Error al leer el archivo: " + e.getMessage());
        }
    }
    }//GEN-LAST:event_btnCarryActionPerformed

    
    private void closeSesion(){
        int confirmacion = javax.swing.JOptionPane.showConfirmDialog(this, "Estas seguro de que quieres cerrar sesion?",
                "Confirmar",javax.swing.JOptionPane.YES_NO_OPTION);
        
        if (confirmacion == javax.swing.JOptionPane.YES_NO_OPTION){
            dispose();
            SwingUtilities.invokeLater(() ->{
                new LoginFrame().setVisible(true);
            });
            
        }
        
        
    }
    
    private void closeSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeSesionActionPerformed
        closeSesion();
    }//GEN-LAST:event_closeSesionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new RegistroEstudiantesFrame().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCarry;
    private javax.swing.JButton buttonClear;
    private javax.swing.JButton buttonExit;
    private javax.swing.JButton closeSesion;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lblName;
    private javax.swing.JTextField lblNote;
    private javax.swing.JTextField lblNote2;
    private javax.swing.JTextField lblNote3;
    private javax.swing.JButton saveCsv;
    private javax.swing.JSpinner spinerAge;
    private javax.swing.JTable tablaEstudiantes;
    private javax.swing.JLabel txtNota;
    private javax.swing.JLabel txtPromedio;
    private javax.swing.JLabel txtPromedioGrupal;
    private javax.swing.JLabel txtResultado;
    // End of variables declaration//GEN-END:variables
}